@{
    ViewData["Title"] = "Products Page";
}

@* <div class="text-center">
    <h5 class="display-4">Welcome, Here is Products List!</h5>
</div> *@

<div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xs" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 id="headerText">Product Create</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <input type="text" id="Id" hidden />
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="required">Product Name</label>
                            <input type="text" id="productName" class="form-control mt-2" placeholder="Please Enter Product Name" />
                        </div>
                    </div>
                    @* <div class="col-md-12">
                        <div class="form-group">
                            <label class="">Pack Size</label>
                            <input type="text" id="packSize" class="form-control mt-2" placeholder="Please Enter Pack Size" />
                        </div>
                    </div> *@
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="required">Quantity</label>
                            <input type="text" id="quantity" class="form-control mt-2" placeholder="Please Enter Quantity" />
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="required">Actual Price</label>
                            <input type="text" id="actualPrice" class="form-control mt-2" placeholder="Please Enter Actual Price" />
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="required">Sell Price</label>
                            <input type="text" id="sellPrice" class="form-control mt-2" placeholder="Please Enter Sell Price" />
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="required">Product Adding Date</label>
                            <input type="date" id="prodAddingDate" class="form-control mt-2" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="text-right">
                    <button type="button" class="btn btn-secondary btn-md" onclick="CloseProductModal()">Close</button>
                    <button type="submit" onclick="CreateProduct()" class="btn btn-primary btn-md" id="saveBtn">
                        <div id="saveSpinner" class="spinner-border spinner-border-sm hidden" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>Save
                    </button>

                    @* for update *@
                    <button type="submit" onclick="DeleteProduct()" class="btn btn-danger btn-md hidden" id="deleteBtn">
                        <div id="deleteSpinner" class="spinner-border spinner-border-sm hidden" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>Delete
                    </button>
                    <button type="submit" onclick="UpdateProduct()" class="btn btn-primary btn-md hidden" id="updateBtn">
                        <div id="updateSpinner" class="spinner-border spinner-border-md hidden" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>Update
                    </button>

                </div>
            </div>
        </div>
    </div>
</div>

<div class="row mt-3">
    <div class="card">
        <div class="card-header justify-content-between">
            <h1> Products List </h1>
            <button class="btn btn-primary btn-md" id="productAddBtn" onclick="OpenProductCreateModal()"><i class="fa fa-light fa-plus-circle px-2"></i> Add Product</button>
        </div>
        <div class="card-body">
            <div class="row">
                <table id="productListTable" class="table customTableCSS table-striped table-hover cell-border" cellspacing="5" width="100%"></table>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">

        let companyId = '@ViewBag.CompanyId';
        var tableProductsContainer;

        $(document).ready(function () {
            createDataTable();
        });

        function OpenProductCreateModal() {
            ClearModal();

            $("#deleteBtn").addClass('hidden');
            $("#updateBtn").addClass('hidden');
            $("#saveBtn").removeClass('hidden');

            $("#createModal").modal('show');
        }

        function CloseProductModal() {
            ClearModal();
            $("#createModal").modal('hide');
        }

        function ClearModal()
        {
            $("#Id").val("");
            $("#productName").val("");
            $("#quantity").val("");
            $("#actualPrice").val("");
            $("#sellPrice").val("");
            $("#prodAddingDate").val("");
        }

        function ProductCreationValidation() {
            var flag = true;
            if ($("#productName").val() == "") {
                ShowMessage("Product Name is Required!", MessageType.Validation);
                return false;
            }
            if ($("#quantity").val() == "") {
                ShowMessage("Quantity is Required!", MessageType.Validation);
                return false;
            }
            if ($("#actualPrice").val() == "") {
                ShowMessage("Actual Price is Required!", MessageType.Validation);
                return false;
            }
            if ($("#sellPrice").val() == "") {
                ShowMessage("Sell Price is Required!", MessageType.Validation);
                return false;
            }
            if ($("#prodAddingDate").val() == "") {
                ShowMessage("Product Adding Date is Required!", MessageType.Validation);
                return false;
            }

            return flag;
        }

        function CreateProduct() {
            if (!ProductCreationValidation()) {
                return;
            }

            var prodObj = {
                Name: $("#productName").val(),
                Quantity: $("#quantity").val(),
                ActualPrice: $("#actualPrice").val(),
                SellPrice: $("#sellPrice").val(),
                ProductAddingDate: $("#prodAddingDate").val(),
                CompanyId : companyId
            }

            $("#saveSpinner").removeClass('hidden');
            $("#saveBtn").attr('disabled', true);

            $.ajax({
                url: "/Products/Create",
                type: "POST",
                dataType: "json",
                data: { productObj: prodObj },
                success: function (response) {
                    $("#saveSpinner").addClass('hidden');
                    $("#saveBtn").attr('disabled', false);
                    if (response.success) {
                        tableProductsContainer.ajax.reload();
                        ShowMessage(response.message, MessageType.Create);
                        CloseProductModal();
                    }
                    else {
                        ShowMessage(response.message, MessageType.Validation)
                    }
                },
                error: function (error) {
                    ShowMessage(error.message, MessageType.Error);
                }
            });
        }
        let serialNo = 0;
        function createDataTable() {
            tableProductsContainer = $('#productListTable').DataTable({
                "scrollX": true,
                responsive: false,
                serverSide: false,
                searching: true,
                "bAutoWidth": false,
                "bDestroy": true,
                sAjaxDataProp: "values",
                lengthMenu: [[10, 20, 50, -1], [10, 20, 50, "All"]],
                ajax: {
                    url: "/Products/GetProducts",
                    type: "GET",
                },
                columnDefs: [
                    // { width: '70%', targets: 1 }, { width: '30%', targets: 2 }
                ],
                "fnServerParams": function (aoData) { },
                "order": [[1, "asc"]],
                "createdRow": function (row, data, rowIndex) {

                    $.each($('td', row), function (colIndex) {
                        $(this).attr('title', $(this).text());
                    });
                },
                "initComplete": function (settings, json) {
                    
                },
                aoColumns: [
                    {
                        sTitle: "Serial #",
                        className: "text-center",
                        "mRender": function (data, type, full, meta) {
                            // Use meta.row and meta.settings for correct numbering
                            var api = new $.fn.dataTable.Api(meta.settings);
                            var pageInfo = api.page.info();
                            return pageInfo.start + meta.row + 1;
                        }
                    },
                    {
                        sTitle: "Product Id",
                        className: "text-center",
                        visible: false,
                        "mRender": function (data, type, full) {

                            return full.id;
                        }
                    },
                    {
                        sTitle: "Company Id",
                        className: "text-center",
                        visible: false,
                        "mRender": function (data, type, full) {

                            return full.companyId;
                        }
                    },
                    {
                        sTitle: "Product Name",
                        className: "text-center text-nowrap",
                        "mRender": function (data, type, full) {

                            var prodName = "<span style='background-color: transparent; border: none;' type='text' id='prodName_" + full.id + "' class='form-control'>" + full.name + "</span>";
                            return prodName;
                        }
                    },
                    {
                        sTitle: "Pack Size",
                        className: "text-center text-nowrap",
                        "mRender": function (data, type, full) {

                            var packSize = "<span style='background-color: transparent; border: none;' type='text' id='packSize_" + full.id + "' class='form-control'>" + full.packSize + "</span>";
                            return packSize;
                        }
                    },
                    {
                        sTitle: "Quantity",
                        className: "text-center text-nowrap",
                        "mRender": function (data, type, full) {

                            var quantity = "<span style='background-color: transparent; border: none;' type='text' id='quantity_" + full.id + "' class='form-control'>" + full.quantity + "</span>";
                            return quantity;
                        }
                    },
                    {
                        sTitle: "Sold Out",
                        className: "text-center text-nowrap",
                        "mRender": function (data, type, full) {

                            var soldOut = "<span style='background-color: transparent; border: none;' type='text' id='soldOut_" + full.id + "' class='form-control'>" + full.soldQuantity + "</span>";
                            return soldOut;
                        }
                    },
                    {
                        sTitle: "Actual Price",
                        className: "text-center text-nowrap",
                        "mRender": function (data, type, full) {

                            var actualPrice = "<span style='background-color: transparent; border: none;' type='text' id='actualPrice_" + full.id + "' class='form-control'>" + full.actualPrice + "</span>";
                            return actualPrice;
                        }
                    },
                    {
                        sTitle: "Total Actual Price",
                        className: "text-center text-nowrap",
                        visible: false,
                        "mRender": function (data, type, full) {

                            var totalActual = "<span style='background-color: transparent; border: none;' type='text' id='totalActPrice_" + full.id + "' class='form-control'>" + full.totalActualPrice + "</span>";
                            return totalActual;
                        }
                    },
                    {
                        sTitle: "Sell Price",
                        className: "text-center text-nowrap",
                        "mRender": function (data, type, full) {

                            var sellPrice = "<span style='background-color: transparent; border: none;' type='text' id='sellPrice_" + full.id + "' class='form-control'>" + full.sellPrice + "</span>";
                            return sellPrice;
                        }
                    },
                    {
                        sTitle: "Total Sell Price",
                        className: "text-center text-nowrap",
                        visible: false,
                        "mRender": function (data, type, full) {

                            var totalSellPrice = "<span style='background-color: transparent; border: none;' type='text' id='totalSellPrice_" + full.id + "' class='form-control'>" + full.totalSellPrice + "</span>";
                            return totalSellPrice;
                        }
                    },
                    {
                        sTitle: "Profit / Loss",
                        className: "text-center text-nowrap",
                        "mRender": function (data, type, full) {

                            var profitOrLoss = "<span style='background-color: transparent; border: none;' type='text' id='profitOrLoss_" + full.id + "' class='form-control'>" + full.profitOrLoss + "</span>";
                            return profitOrLoss;
                        }
                    },
                    {
                        sTitle: "Action",
                        sClass: "text-center",
                        "mRender": function (data, type, full) {
                            var btnGrS = '<div class="btn-group" role="group">';

                            var productsButton = '<button id="btnProducts_' + full.id + '" class="btn btn-info btn-md rounded me-2" onclick="ProductAddOrSell(\'' + full.id + '\');">' +
                                ' <span> Products </span>' + '</button>';

                            var updateOrDeleteButton = '<button id="btnupdateOrDeleteCompany_' + full.id + '" class="btn btn-secondary btn-md rounded" onclick="UpdateOrDeleteCompany(\'' + full.id + '\');">' + '<i class="fas fa-edit"></i> <span>Update / Delete</span>' + '</button>';

                            var btnGrE = '</div>';

                            return btnGrS + productsButton + updateOrDeleteButton + btnGrE;
                        },
                        className: "text-center"

                    }
                ]
            });

        }
    </script>
}